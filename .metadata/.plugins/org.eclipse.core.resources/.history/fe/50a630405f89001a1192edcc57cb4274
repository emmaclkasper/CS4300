package language;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.io.*;
import java.sql.*;

import javax.servlet.Servlet;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/accessory")
public class accessory extends HttpServlet implements Servlet {
	private static final long serialVersionUID = 1L;
       
  
    public accessory() {
        super();
  
    }


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		doPost(request, response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		response.setContentType("text/html");
		PrintWriter out = response.getWriter();
		out.println("<html><head>");
		out.println("<title> Worksheet 16");
		out.println("</head><body><h1>Worksheet 16");
		
		String name = request.getParameter("name");
		String price = request.getParameter("price");
		
		
		String dbURL = "jdbc:mysql://localhost:3306/world?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC";
		String query = "INSERT INTO accessories(first_name,last_name,city_name,email)values('"+name+"','"+price+"')");

		


		try { // need a try-catch in case there is a runtime error
			
			Connection connection = DriverManager.getConnection(dbURL, "root", "password"); // returns an object whose
			// type is Connection
			PreparedStatement pstmt = connection.prepareStatement(query); // this can be any type of SQL command
			// returns an object that is of type PreparedStatement

			pstmt.setString(1, name); // this fills in the gaps you have from above (the question marks) -- the data
			// you're going to insert is a String (hence setString)
			// first parameter = how many gaps; second parameter = what you want to fill
			// gaps with

			pstmt.setString(2, price);
		/*	
			for(int i = 0; i< name_3.length; i++)
				pstmt.setString(i+4, name_3[i]);
		*/		
			// this executes the query
			ResultSet rs = pstmt.executeQuery(); // returns a table of the result

			// get the result and process it row by row
			while (rs.next())
				System.out.println(rs.getString(1) + "\t" + rs.getString(2)); // 
			
				// get two Strings because in SELECT you
			// want code and name (3 things)
			connection.close(); // when you're done working with the database
		} catch (SQLException e) {
			e.printStackTrace();

		}
		
		out.println("</body></html>");
		out.close();
		
		
	}
	


}
